[{"/Users/maria.roman/Desktop/pokemon_app/src/App.js":"1","/Users/maria.roman/Desktop/pokemon_app/src/index.js":"2","/Users/maria.roman/Desktop/pokemon_app/src/PrincipalPage/PrincipalPage.js":"3","/Users/maria.roman/Desktop/pokemon_app/src/Context/Context.js":"4","/Users/maria.roman/Desktop/pokemon_app/src/reportWebVitals.js":"5","/Users/maria.roman/Desktop/pokemon_app/src/Menu/Menu.js":"6","/Users/maria.roman/Desktop/pokemon_app/src/PokemonDetailed/PokemonDetailed.js":"7","/Users/maria.roman/Desktop/pokemon_app/src/PokemonDetailed/GetUrlParams.js":"8"},{"size":1393,"mtime":1610984218718,"results":"9","hashOfConfig":"10"},{"size":547,"mtime":1610902818184,"results":"11","hashOfConfig":"10"},{"size":7742,"mtime":1610987595518,"results":"12","hashOfConfig":"10"},{"size":190,"mtime":1610897432993,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1610897020779,"results":"14","hashOfConfig":"10"},{"size":3585,"mtime":1610982593637,"results":"15","hashOfConfig":"10"},{"size":1189,"mtime":1610987378198,"results":"16","hashOfConfig":"10"},{"size":356,"mtime":1610985864805,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ektuo9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maria.roman/Desktop/pokemon_app/src/App.js",["36"],"/Users/maria.roman/Desktop/pokemon_app/src/index.js",[],["37","38"],"/Users/maria.roman/Desktop/pokemon_app/src/PrincipalPage/PrincipalPage.js",["39","40"],"/Users/maria.roman/Desktop/pokemon_app/src/Context/Context.js",[],"/Users/maria.roman/Desktop/pokemon_app/src/reportWebVitals.js",[],"/Users/maria.roman/Desktop/pokemon_app/src/Menu/Menu.js",["41"],"import React, {useContext, useState} from 'react';\nimport Context from '../Context/Context';\n//reactstrap\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst Menu=()=>{\n\n    // context\n    const contextComponent = useContext(Context);\n    const contextComponentValue = contextComponent.contextInfo;\n    const setContextComponentValue = contextComponent.setContextInfo;\n\n    const totalPagination = Math.ceil(contextComponentValue.count / 20);\n    \n    const paginationNum = () => {\n        const paginationSelected = contextComponentValue.paginationSelected;\n        const withEachCell = 45;\n        let arrowsSize = withEachCell * 4;\n        let widthScreen = contextComponentValue.screenWidth;\n        if (contextComponentValue.screenWidth > 1402) {\n            widthScreen = 1402;\n        }\n        let numberPaginationOptions = Math.floor((widthScreen - arrowsSize) / withEachCell);\n        let minVal = 0;\n        let maxVal = 0;\n        if (paginationSelected - Math.floor(numberPaginationOptions / 2) < 1) {\n            minVal = 1;\n            maxVal = numberPaginationOptions;\n        } else if (paginationSelected + Math.floor(numberPaginationOptions / 2) > totalPagination) {\n            minVal = totalPagination - numberPaginationOptions;\n            maxVal = totalPagination;\n        } else {\n            minVal = paginationSelected - Math.floor(numberPaginationOptions / 2)\n            maxVal = paginationSelected + Math.floor(numberPaginationOptions / 2)\n        }\n        let toReturn = [];\n        for (let i = minVal; i <= maxVal; i++) {\n            toReturn.push(\n                <PaginationItem className={paginationSelected === i ? \"active\" : undefined} onClick={() => setContextComponentValue({...contextComponentValue, paginationSelected: i})} key={\"paginationItem_\" + i}>\n                    <PaginationLink href=\"#\">\n                        {i}\n                    </PaginationLink>\n                </PaginationItem>\n            )\n        }\n        return toReturn;\n    }\n\n    return(\n        <div className=\"Menu\">\n            <div className=\"row justifyCenter\">\n                <Pagination aria-label=\"Page navigation example\" style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <PaginationItem disabled={contextComponentValue.paginationSelected === 1}>\n                        <PaginationLink first onClick={() => setContextComponentValue({...contextComponentValue, paginationSelected: 1})} />\n                    </PaginationItem>\n                    <PaginationItem disabled={contextComponentValue.paginationSelected === 1}>\n                        <PaginationLink previous onClick={() => setContextComponentValue({...contextComponentValue, paginationSelected: contextComponentValue.paginationSelected -1})}/>\n                    </PaginationItem>\n                    {paginationNum()}\n                    <PaginationItem disabled={contextComponentValue.paginationSelected === totalPagination}>\n                        <PaginationLink next onClick={() => setContextComponentValue({...contextComponentValue, paginationSelected: contextComponentValue.paginationSelected +1})}/>\n                    </PaginationItem>\n                    <PaginationItem disabled={contextComponentValue.paginationSelected === totalPagination}>\n                        <PaginationLink last onClick={() => setContextComponentValue({...contextComponentValue, paginationSelected: totalPagination})}/>\n                    </PaginationItem>\n                </Pagination>\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;","/Users/maria.roman/Desktop/pokemon_app/src/PokemonDetailed/PokemonDetailed.js",["42","43","44","45"],"/Users/maria.roman/Desktop/pokemon_app/src/PokemonDetailed/GetUrlParams.js",[],{"ruleId":"46","severity":1,"message":"47","line":29,"column":6,"nodeType":"48","endLine":29,"endColumn":8,"suggestions":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":44,"column":8,"nodeType":"48","endLine":44,"endColumn":50,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":103,"column":37,"nodeType":"58","endLine":103,"endColumn":131},{"ruleId":"59","severity":1,"message":"60","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":14,"column":11,"nodeType":"61","messageId":"62","endLine":14,"endColumn":35},{"ruleId":"59","severity":1,"message":"64","line":17,"column":11,"nodeType":"61","messageId":"62","endLine":17,"endColumn":27},{"ruleId":"59","severity":1,"message":"65","line":17,"column":29,"nodeType":"61","messageId":"62","endLine":17,"endColumn":48},{"ruleId":"46","severity":1,"message":"66","line":24,"column":8,"nodeType":"48","endLine":24,"endColumn":10,"suggestions":"67"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contextInfo'. Either include it or remove the dependency array. You can also do a functional update 'setContextInfo(c => ...)' if you only need 'contextInfo' in the 'setContextInfo' call.","ArrayExpression",["68"],"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"React Hook useEffect has missing dependencies: 'contextComponentValue' and 'setContextComponentValue'. Either include them or remove the dependency array.",["71"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setContextComponentValue' is assigned a value but never used.","'pokemonAbilities' is assigned a value but never used.","'setPokemonAbilities' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contextComponentValue.pokemonResults' and 'ourUrl'. Either include them or remove the dependency array.",["72"],{"desc":"73","fix":"74"},"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [contextInfo]",{"range":"79","text":"80"},"Update the dependencies array to be: [contextComponentValue, contextComponentValue.paginationSelected, setContextComponentValue]",{"range":"81","text":"82"},"Update the dependencies array to be: [contextComponentValue.pokemonResults, ourUrl]",{"range":"83","text":"84"},[1014,1016],"[contextInfo]",[1695,1737],"[contextComponentValue, contextComponentValue.paginationSelected, setContextComponentValue]",[844,846],"[contextComponentValue.pokemonResults, ourUrl]"]